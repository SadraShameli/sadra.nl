generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Sensor {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  name      String      @unique
  unit      String
  enabled   Boolean
  readings  Reading[]
}

model Location {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  name          String
  location_name String      @unique
  location_id   Int         @unique
  devices       Device[]
  reading       Reading[]
  recording     Recording[]
}

model Device {
  id                 Int         @id @default(autoincrement())
  createdAt          DateTime    @default(now())
  name               String
  register_interval  Int
  loudness_threshold Int
  location_id        Int
  device_id          Int         @unique
  sensors            Int[]
  readings           Reading[]
  recordings         Recording[]
  location           Location    @relation(fields: [location_id], references: [id])
}

model Reading {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  value       Float
  device_id   Int
  sensor_id   Int
  location_id Int
  device      Device   @relation(fields: [device_id], references: [id])
  sensor      Sensor   @relation(fields: [sensor_id], references: [id])
  location    Location @relation(fields: [location_id], references: [id])
}

model Recording {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  file        Bytes
  file_name   String
  device_id   Int
  location_id Int
  device      Device   @relation(fields: [device_id], references: [id])
  location    Location @relation(fields: [location_id], references: [id])
}
