generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum SensorTypes {
  Temperature
  Humidity
  GasResistance
  AirPressure
  Altitude
  Loudness
  RPM
}

enum DeviceTypes {
  Recording
  Reading
}

model Sensor {
  id            Int             @id @default(autoincrement())
  createdAt     DateTime        @default(now())
  type          SensorTypes     @unique
  unit          String
  sensor_id     Int             @unique
  readings Reading[]
}

model Location {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  name          String
  location_name String   @unique
  location_id   Int      @unique
  devices        Device[]
}

model Device {
  id                 Int         @id @default(autoincrement())
  createdAt          DateTime    @default(now())
  name               String
  type               DeviceTypes
  device_id          Int         @unique
  register_interval  Int
  loudness_threshold Int
  locationId         Int
  location           Location    @relation(fields: [locationId], references: [id])
  readings           Reading[]
  recordings         Recording[]
}

model Reading {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  value     Float
  sensorId  Int
  deviceId  Int
  sensor    Sensor   @relation(fields: [sensorId], references: [id])
  device    Device   @relation(fields: [deviceId], references: [id])
}

model Recording {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  deviceId  Int
  file      Bytes
  device    Device   @relation(fields: [deviceId], references: [id])
}
